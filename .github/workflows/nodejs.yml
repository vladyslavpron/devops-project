name: Node.js CI

on:
  # push:
  #   branches: ['master']
  # pull_request:
  #   branches: ['master']
  workflow_dispatch:

env:
  NODE_VERSION: 22.11.0
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ECR_ID: ${{ secrets.AWS_ECR_ID }}
  AWS_ECS_CLUSTER: ${{ secrets.AWS_ECS_CLUSTER }}
  AWS_ECS_SERVICE: ${{ secrets.AWS_ECS_SERVICE }}
  AWS_ECS_TASK_DEFINITION: ${{ secrets.AWS_ECS_TASK_DEFINITION }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm install
      - run: npm run lint
      - run: npm run build
      - run: npm run test
      - run: aws ecr get-login-password --region ${{ env.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ECR_ID }}
      - run: docker build . --file Dockerfile --tag ${{ env.AWS_ECR_ID }}/devops-project:latest
      - run: docker push ${{ env.AWS_ECR_ID }}/devops-project:latest

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ vars.AWS_ECS_TASK_DEFINITION }} \
          --query taskDefinition > task-definition.json

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: task-definition.json
          service: ${{ env.AWS_ECS_SERVICE }}
          cluster: ${{ env.AWS_ECS_CLUSTER }}
